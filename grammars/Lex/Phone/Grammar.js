// Generated from Grammar.g4 by ANTLR 4.5.2
// jshint ignore: start
var antlr4 = require('antlr4/index');


var serializedATN = ["\u0003\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd",
    "\u0002\u0004D\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
    "\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0003\u0002\u0006",
    "\u0002\u000f\n\u0002\r\u0002\u000e\u0002\u0010\u0003\u0002\u0003\u0002",
    "\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004",
    "\u0003\u0004\u0003\u0005\u0003\u0005\u0005\u0005\u001e\n\u0005\u0003",
    "\u0005\u0003\u0005\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003",
    "\u0006\u0007\u0006\'\n\u0006\f\u0006\u000e\u0006*\u000b\u0006\u0003",
    "\u0006\u0005\u0006-\n\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0005",
    "\u00062\n\u0006\u0003\u0006\u0007\u00065\n\u0006\f\u0006\u000e\u0006",
    "8\u000b\u0006\u0003\u0006\u0005\u0006;\n\u0006\u0003\u0006\u0007\u0006",
    ">\n\u0006\f\u0006\u000e\u0006A\u000b\u0006\u0003\u0006\u0003\u0006\u0002",
    "\u0002\u0007\u0003\u0003\u0005\u0002\u0007\u0002\t\u0002\u000b\u0004",
    "\u0003\u0002\u0004\u0005\u0002\u000b\f\u000f\u000f\"\"\u0003\u00022",
    ";H\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u000b\u0003\u0002\u0002",
    "\u0002\u0003\u000e\u0003\u0002\u0002\u0002\u0005\u0014\u0003\u0002\u0002",
    "\u0002\u0007\u0016\u0003\u0002\u0002\u0002\t\u001b\u0003\u0002\u0002",
    "\u0002\u000b!\u0003\u0002\u0002\u0002\r\u000f\t\u0002\u0002\u0002\u000e",
    "\r\u0003\u0002\u0002\u0002\u000f\u0010\u0003\u0002\u0002\u0002\u0010",
    "\u000e\u0003\u0002\u0002\u0002\u0010\u0011\u0003\u0002\u0002\u0002\u0011",
    "\u0012\u0003\u0002\u0002\u0002\u0012\u0013\b\u0002\u0002\u0002\u0013",
    "\u0004\u0003\u0002\u0002\u0002\u0014\u0015\t\u0003\u0002\u0002\u0015",
    "\u0006\u0003\u0002\u0002\u0002\u0016\u0017\u0005\u0005\u0003\u0002\u0017",
    "\u0018\u0005\u0005\u0003\u0002\u0018\u0019\u0005\u0005\u0003\u0002\u0019",
    "\u001a\u0005\u0005\u0003\u0002\u001a\b\u0003\u0002\u0002\u0002\u001b",
    "\u001d\u0005\u0007\u0004\u0002\u001c\u001e\u0007/\u0002\u0002\u001d",
    "\u001c\u0003\u0002\u0002\u0002\u001d\u001e\u0003\u0002\u0002\u0002\u001e",
    "\u001f\u0003\u0002\u0002\u0002\u001f \u0005\u0007\u0004\u0002 \n\u0003",
    "\u0002\u0002\u0002!\"\u0007-\u0002\u0002\"#\u00077\u0002\u0002#$\u0007",
    "7\u0002\u0002$(\u0003\u0002\u0002\u0002%\'\u0005\u0003\u0002\u0002&",
    "%\u0003\u0002\u0002\u0002\'*\u0003\u0002\u0002\u0002(&\u0003\u0002\u0002",
    "\u0002()\u0003\u0002\u0002\u0002),\u0003\u0002\u0002\u0002*(\u0003\u0002",
    "\u0002\u0002+-\u0007*\u0002\u0002,+\u0003\u0002\u0002\u0002,-\u0003",
    "\u0002\u0002\u0002-.\u0003\u0002\u0002\u0002./\u0005\u0005\u0003\u0002",
    "/1\u0005\u0005\u0003\u000202\u0007+\u0002\u000210\u0003\u0002\u0002",
    "\u000212\u0003\u0002\u0002\u000226\u0003\u0002\u0002\u000235\u0005\u0003",
    "\u0002\u000243\u0003\u0002\u0002\u000258\u0003\u0002\u0002\u000264\u0003",
    "\u0002\u0002\u000267\u0003\u0002\u0002\u00027:\u0003\u0002\u0002\u0002",
    "86\u0003\u0002\u0002\u00029;\u0007;\u0002\u0002:9\u0003\u0002\u0002",
    "\u0002:;\u0003\u0002\u0002\u0002;?\u0003\u0002\u0002\u0002<>\u0005\u0003",
    "\u0002\u0002=<\u0003\u0002\u0002\u0002>A\u0003\u0002\u0002\u0002?=\u0003",
    "\u0002\u0002\u0002?@\u0003\u0002\u0002\u0002@B\u0003\u0002\u0002\u0002",
    "A?\u0003\u0002\u0002\u0002BC\u0005\t\u0005\u0002C\f\u0003\u0002\u0002",
    "\u0002\u000b\u0002\u0010\u001d(,16:?\u0003\b\u0002\u0002"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

function Grammar(input) {
	antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

Grammar.prototype = Object.create(antlr4.Lexer.prototype);
Grammar.prototype.constructor = Grammar;

Grammar.EOF = antlr4.Token.EOF;
Grammar.WS = 1;
Grammar.Phone = 2;


Grammar.modeNames = [ "DEFAULT_MODE" ];

Grammar.literalNames = [  ];

Grammar.symbolicNames = [ null, "WS", "Phone" ];

Grammar.ruleNames = [ "WS", "DIGIT", "NUMBER", "PhoneNumber", "Phone" ];

Grammar.grammarFileName = "Grammar.g4";



exports.Grammar = Grammar;

